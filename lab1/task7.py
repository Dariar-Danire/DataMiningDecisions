# Создайте список из N первых элементов последовательности частичных сумм ряда Фибоначчи.
# Выведите его как итератор (используйте yield).

# Ряд Фибоначчи: 1, 2, 3, 5, 8, 13 и т. д.
# А yield как бы выбрасывает из функции числа, не завешая при этом работу программы. Как return, только функция после него не заканчивается
# Ну и эти числа нужно ловить куда-то на выходе, так что в __main__ исопльзуется констукция list(task7.solve(N)). Так функция "выплёвывает"
# значения в безымянный список. Можно присвоить значение переменной, но эта конструкция всё равно должна присутствовать.

def solve(N: int):
    a, b = 0, 1
    for _ in range(N):
        yield a
        a, b = b, a + b